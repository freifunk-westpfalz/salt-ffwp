domain (ip ip6) {
  table filter {
    chain INPUT {
      policy {{ salt['pillar.get']('network:firewall:input:policy', 'DROP') }};

      interface lo ACCEPT;

      proto icmp ACCEPT;
      proto tcp dport {{ salt['pillar.get']('ssh_port', '22') }} ACCEPT;
      mod state state (ESTABLISHED RELATED) ACCEPT;
    }

    chain OUTPUT {
      policy {{ salt['pillar.get']('network:firewall:output:policy', 'ACCEPT') }};
    }

    chain FORWARD {
      policy {{ salt['pillar.get']('network:firewall:forward:policy', 'DROP') }};
    }
  }
  table mangle {
    chain PREROUTING {
      policy {{ salt['pillar.get']('network:firewall:prerouting:policy', 'ACCEPT') }};
    }
  }
}

# Erlaube Traffic in alle angeschlossenen v4 Netze
domain (ip) {
 table filter {
   chain OUTPUT {
    {% for net in salt['network.subnets']() -%}
    daddr {{ net }} ACCEPT;
    {% endfor -%}
   }
 }
}

@include '/etc/ferm.d/';

# Verbiete Traffic in alle anderen oeffentlichen v4 Netze
domain (ip) {
 table filter {
   chain OUTPUT {
    daddr (10.0.0.0/8 172.16.0.0/12 192.168.0.0/16) REJECT reject-with icmp-host-prohibited;
   }
 }
}

#Android Workaround bis es public v6 gibt
domain (ip6) {
  table filter {
    chain FORWARD {
      daddr 2000::/3 REJECT reject-with icmp6-no-route;
    }
  }
}
